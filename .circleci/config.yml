version: 2.1

executors:
  linux:
    machine:
      image: circleci/classic:latest
  macos:
    macos:
      xcode: "11.4.0"

jobs:
  build:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - attach_workspace:
          at: .
      - checkout:
          path: cdms
      - run:
          command: |
            export WORK_DIR=`pwd ${CIRCLE_WORKING_DIRECTORY}`

            pushd cdms

            make build

            popd

            mkdir -p ${WORK_DIR}/build_artifacts/

            cp ${WORK_DIR}/conda-bld/**/*.tar.bz2 ${WORK_DIR}/build_artifacts/
      - persist_to_workspace:
          root: .
          paths:
            - cdms
            - conda-bld
            - build_artifacts
      - save_cache:
          paths:
            - pkgs
          key: conda-pkgs-{{ arch }}
  test:
    parameters:
      os:
        type: executor
    executor: << parameters.os >>
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: conda-pkgs-{{ arch }} 
      - run:
          command: |
            export WORK_DIR=`pwd ${CIRCLE_WORKING_DIRECTORY}`

            cd cdms/

            make test

            export TEST_ARTIFACTS=${WORK_DIR}/test_artifacts/`make list-config`
            
            mkdir -p ${TEST_ARTIFACTS}

            cp -rf tests_html/* ${TEST_ARTIFACTS}

            # Prevent errors when merging workspaces for upload
            rm -rf ${WORK_DIR}/cdms
            rm -rf ${WORK_DIR}/conda-bld
      - persist_to_workspace:
          root: .
          paths:
            - test_artifacts
      - save_cache:
          paths:
            - pkgs
          key: conda-pkgs-{{ arch }}

  upload:
    machine:
      image: circleci/classic:latest
    steps:
      - attach_workspace:
          at: .
      - run: ls -la build_artifacts/
      - run: ls -la test_artifacts/

workflows:
  cdms:
    jobs:
      - build:
          matrix:
            parameters:
              os: [ linux, macos ]
          name: build-<< matrix.os >>
      - test:
          matrix:
            parameters:
              os: [ linux, macos ]
          name: test-<<matrix.os>>
          requires:
            - build-<< matrix.os >>
      - upload:
          name: upload
          requires:
            - test
