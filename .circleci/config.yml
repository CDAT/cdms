version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       git clone -b conda_forge_pinning https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -l $LAST_STABLE -B 0 -p $PKG_NAME -r $REPO_NAME -b $CIRCLE_BRANCH --do_rerender

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --set channel_priority strict
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME --build_version $BUILD_VARIANT_VER --do_build

  - &setup_run_tests
    name: setup_run_tests
    environment:
       PKGS: "testsrunner pytest myproxyclient cdms2"
       CHANNELS: "-c cdat/label/linatest -c cdat/label/nightly -c conda-forge"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels cdat/label/linatest --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority true
       conda create -y -n test_cdms --use-local $CHANNELS "$CONDA_PY_VER" $PKGS
       conda activate test_cdms
       conda list
       echo "python -c 'import cdms2'"
       python -c "import cdms2"

  - &run_tests
    name: run_tests
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       # conda activate base
       conda activate test_cdms
       echo "python -c 'import cdms2'"
       python -c "import cdms2; import sys; print(sys.path)"
       python run_tests.py -H -v2 --subdir
       python run_tests.py -H -v2 --subdir --dask

jobs:
   linux_cdms_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: "/home/circleci/project/workdir"
         PKG_NAME: "cdms2"
         REPO_NAME: "cdms"
         ENV_NAME: "test_cdms"
         LAST_STABLE: "3.1.4"
         CONDA_PY_VER: "python>=3.7,<3.8"
         BUILD_VARIANT_VER: "noarch"
         COVERAGE: "-c tests/coverage.json --coverage-from-egg"
         COVERAGE_PKGS: "coverage coveralls"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - run: *setup_run_tests
         - run: *run_tests

workflows:
   version: 2
   cdms:
      jobs:
         - linux_cdms_py37
